package ${package.Controller};

import org.springframework.web.bind.annotation.RequestMapping;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.jeecg.common.api.vo.Result;
import org.jeecg.common.system.query.QueryGenerator;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import org.jeecg.common.system.base.controller.JeecgController;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import lombok.extern.slf4j.Slf4j;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.jeecg.common.aspect.annotation.AutoLog;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@Api(tags = "$!{table.comment}")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequiredArgsConstructor
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} extends JeecgController<${entity}, ${entity}Service> {
#end

    private final ${table.serviceName} ${table.entityPath}Service;

    /**
     * 分页列表查询
     */
    @ApiOperation(value="$!{table.comment}-分页列表查询", notes="$!{table.comment}-分页列表查询")
    @GetMapping(value = "/list")
    public Result<IPage<${entity}>> queryPageList(${entity} ${table.entityPath},
                                                                @RequestParam(name="pageNo", defaultValue="1") Integer pageNo,
                                                                @RequestParam(name="pageSize", defaultValue="10") Integer pageSize,
                                                                HttpServletRequest req) {
        QueryWrapper<${entity}> queryWrapper = QueryGenerator.initQueryWrapper(${table.entityPath}, req.getParameterMap());
        Page<${entity}> page = new Page<>(pageNo, pageSize);
        IPage<${entity}> pageList = ${table.entityPath}Service.page(page, queryWrapper);
		return Result.OK(pageList);
	}

    /**
     *  添加
     */
    @AutoLog(value = "$!{table.comment}-添加")
    @ApiOperation(value="$!{table.comment}-添加", notes="$!{table.comment}-添加")
    @PostMapping(value = "/add")
    public Result<String> add(@RequestBody ${entity} ${table.entityPath}) {
        ${table.entityPath}Service.save(${table.entityPath});
		return Result.OK("添加成功！");
	}

    /**
     *  编辑
     */
    @AutoLog(value = "$!{table.comment}-编辑")
    @ApiOperation(value="$!{table.comment}-编辑", notes="$!{table.comment}-编辑")
    @RequestMapping(value = "/edit", method = {RequestMethod.PUT,RequestMethod.POST})
    public Result<String> edit(@RequestBody ${entity} ${table.entityPath}) {
        ${table.entityPath}Service.updateById(${table.entityPath});
		return Result.OK("编辑成功!");
	}

    /**
     *  通过id删除
     */
    @AutoLog(value = "$!{table.comment}-通过id删除")
    @ApiOperation(value="$!{table.comment}-通过id删除", notes="$!{table.comment}-通过id删除")
    @DeleteMapping(value = "/delete")
    public Result<String> delete(@RequestParam(name="id") String id) {
        ${table.entityPath}Service.removeById(id);
		return Result.OK("删除成功!");
	}

    /**
     *  批量删除
     */
    @AutoLog(value = "$!{table.comment}-批量删除")
    @ApiOperation(value="$!{table.comment}-批量删除", notes="$!{table.comment}-批量删除")
    @DeleteMapping(value = "/deleteBatch")
    public Result<String> deleteBatch(@RequestParam(name="ids") String ids) {
        ${table.entityPath}Service.removeByIds(Arrays.asList(ids.split(",")));
        return Result.OK("批量删除成功!");
	}

    /**
     * 通过id查询
     */
    @ApiOperation(value="$!{table.comment}-通过id查询", notes="$!{table.comment}-通过id查询")
    @GetMapping(value = "/queryById")
    public Result<${entity}> queryById(@RequestParam(name="id") String id) {
        ${entity} ${table.entityPath} = ${table.entityPath}Service.getById(id);
		if(${table.entityPath}==null) {
            return Result.error("未找到对应数据");
		}
        return Result.OK(${table.entityPath});
	}

    /**
     * 导出excel
     */
    @RequestMapping(value = "/exportXls")
    public ModelAndView exportXls(HttpServletRequest request, ${entity} ${table.entityPath}) {
        return super.exportXls(request, ${table.entityPath}, ${entity}.class, "$!{table.comment}");
    }

    /**
     * 通过excel导入数据
     */
    @RequestMapping(value = "/importExcel", method = RequestMethod.POST)
    public Result<?> importExcel(HttpServletRequest request, HttpServletResponse response) {
        return super.importExcel(request, response, ${entity}.class);
    }
}
#end
